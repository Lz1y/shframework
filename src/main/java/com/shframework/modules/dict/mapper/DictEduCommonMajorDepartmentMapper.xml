<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shframework.modules.dict.mapper.DictEduCommonMajorDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.shframework.modules.dict.entity.DictEduCommonMajorDepartment" >
    <id column="major_id" property="majorId" jdbcType="INTEGER" />
    <id column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="inner_code" property="innerCode" jdbcType="INTEGER" />
  </resultMap>
  
  <!-- 
      /**
     * 查找符合条件的记录数量
     * @param parMap
     * @return
     */
   -->
   <select id="countByMap" resultType="java.lang.Integer" parameterType="map">
    select count(*)
    	from dict_edu_common_major_department as _decmd
    		left join dict_edu_common_major as _decm 
	    		on _decm.id = _decmd.major_id and _decm.status=1 and _decm.logic_delete=0
	    	left join dict_edu_common_department as _decd 
	    		on _decd.id = _decmd.department_id  and _decd.status=1 and _decd.logic_delete=0
    Where
     1=1
    <if test="departmentId!=null">
    and _decmd.department_id = #{departmentId}
    </if>
     ${searchCondition}
     
  </select>
  
  <!-- 
   /**
     * 查找符合条件的记录， 含分页
     * @param parMap
     * @return
     */
   -->
  <select id="selectByMap" resultType="map" parameterType="map" >
    select
    _decmd.inner_code as innerCode, 
    _decmd.major_id as majorId, 
    _decmd.department_id as departmentId,
    
    _decm.code as majorCode,
    _decd.campus_id as campusId
    
    
    from 
    	dict_edu_common_major_department as _decmd
    	left join dict_edu_common_major as _decm 
    		on _decm.id = _decmd.major_id and _decm.status=1 and _decm.logic_delete=0
    	left join dict_edu_common_department as _decd 
    		on _decd.id = _decmd.department_id  and _decd.status=1 and _decd.logic_delete=0
    		
    Where
     1=1
    <if test="departmentId!=null">
    and _decmd.department_id = #{departmentId}
    </if>
     ${searchCondition}
     <if test="searchCondition == null or searchCondition == ''" >
      order by ${defaultSortField}
    </if>
    <!-- limit #{limitStart}, #{limitEnd} -->
    
  </select>
  
  <!-- 
   /**
     * 根据departmentId 删除系部-专业关联关系
     * @param departmentId
     * @return
     */
   -->
   <delete id="deleteByDepartmentId" parameterType="java.lang.Integer">
       delete from dict_edu_common_major_department
       	where department_id= #{departmentId}
   </delete>
   
   <delete id="deleteByMajorId" parameterType="java.lang.Integer">
       delete from dict_edu_common_major_department
       	where major_id= #{majorId}
   </delete>
   
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    major_id, department_id, inner_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_edu_common_major_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartmentKey" >
    select 
    <include refid="Base_Column_List" />
    from dict_edu_common_major_department
    where major_id = #{majorId,jdbcType=INTEGER}
      and department_id = #{departmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartmentKey" >
    delete from dict_edu_common_major_department
    where major_id = #{majorId,jdbcType=INTEGER}
      and department_id = #{departmentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartmentExample" >
    delete from dict_edu_common_major_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartment" >
    insert into dict_edu_common_major_department (major_id, department_id, inner_code
      )
    values (#{majorId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{innerCode,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartment" >
    insert into dict_edu_common_major_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="innerCode != null" >
        inner_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="innerCode != null" >
        #{innerCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartmentExample" resultType="java.lang.Integer" >
    select count(*) from dict_edu_common_major_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dict_edu_common_major_department
    <set >
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.innerCode != null" >
        inner_code = #{record.innerCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dict_edu_common_major_department
    set major_id = #{record.majorId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      inner_code = #{record.innerCode,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartment" >
    update dict_edu_common_major_department
    <set >
      <if test="innerCode != null" >
        inner_code = #{innerCode,jdbcType=INTEGER},
      </if>
    </set>
    where major_id = #{majorId,jdbcType=INTEGER}
      and department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shframework.modules.dict.entity.DictEduCommonMajorDepartment" >
    update dict_edu_common_major_department
    set inner_code = #{innerCode,jdbcType=INTEGER}
    where major_id = #{majorId,jdbcType=INTEGER}
      and department_id = #{departmentId,jdbcType=INTEGER}
  </update>
</mapper>