<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shframework.modules.dict.mapper.DictEduGradRewardsReasonMapper" >
  <resultMap id="BaseResultMap" type="com.shframework.modules.dict.entity.DictEduGradRewardsReason" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="grad_rewards_type_id" property="gradRewardsTypeId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="locked" property="locked" jdbcType="INTEGER" />
    <result column="standard" property="standard" jdbcType="INTEGER" />
    <result column="logic_delete" property="logicDelete" jdbcType="INTEGER" />
    
    <result column="grad_rewards_type_title" property="gradRewardsTypeTitle" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 
   /**
     * 根据查询条件map，查找符合条件的记录数量
     * @param parMap 
     * {
     *   String searchCondition;
     * }
     * @return
     * @author Josh
     */
   -->
   <select id="countByMap" parameterType="map" resultType="java.lang.Integer" >
    select count(*) 
	from dict_edu_grad_rewards_reason as _degrr
	LEFT JOIN dict_edu_grad_rewards_type as _degrt on _degrt.id = _degrr.grad_rewards_type_id
    <where>
     _degrr.logic_delete = 0
     and _degrt.logic_delete = 0
     ${searchCondition}
     </where>
  </select>
  
   <!-- 
    /**
     * 根据查询条件map，查找符合条件的记录
     * @param parMap 
     * {
     *   String searchCondition;
     *   String defaultSortField
     *   int limitStart;
     *   int limitEnd;
     * }
     * @return
     * @author Josh
     */
   -->
  <select id="selectByMap" resultMap="BaseResultMap" parameterType="map" >
	select
		_degrr.id, 
		_degrr.grad_rewards_type_id grad_rewards_type_id,
		_degrt.title grad_rewards_type_title,
		_degrr.title, 
		_degrr.status,
		_degrr.priority,
		_degrr.locked,
		_degrr.standard,
		_degrr.logic_delete
	from dict_edu_grad_rewards_reason as _degrr
	LEFT JOIN dict_edu_grad_rewards_type as _degrt on _degrt.id = _degrr.grad_rewards_type_id
    <where>
    	_degrr.logic_delete = 0
    	and _degrt.logic_delete = 0
    	${searchCondition}
    </where>
    <if test="searchCondition == null or searchCondition == ''" >
		order by ${defaultSortField}
    </if>
    limit #{limitStart}, #{limitEnd}
  </select>
     
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, grad_rewards_type_id, title, priority, status, locked, standard, logic_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReasonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_edu_grad_rewards_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dict_edu_grad_rewards_reason
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dict_edu_grad_rewards_reason
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReasonExample" >
    delete from dict_edu_grad_rewards_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReason" >
    insert into dict_edu_grad_rewards_reason (id, grad_rewards_type_id, title, 
      priority, status, locked, 
      standard, logic_delete)
    values (#{id,jdbcType=INTEGER}, #{gradRewardsTypeId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{locked,jdbcType=INTEGER}, 
      #{standard,jdbcType=INTEGER}, #{logicDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReason" >
    insert into dict_edu_grad_rewards_reason
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gradRewardsTypeId != null" >
        grad_rewards_type_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="standard != null" >
        standard,
      </if>
      <if test="logicDelete != null" >
        logic_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gradRewardsTypeId != null" >
        #{gradRewardsTypeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=INTEGER},
      </if>
      <if test="standard != null" >
        #{standard,jdbcType=INTEGER},
      </if>
      <if test="logicDelete != null" >
        #{logicDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReasonExample" resultType="java.lang.Integer" >
    select count(*) from dict_edu_grad_rewards_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dict_edu_grad_rewards_reason
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gradRewardsTypeId != null" >
        grad_rewards_type_id = #{record.gradRewardsTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=INTEGER},
      </if>
      <if test="record.standard != null" >
        standard = #{record.standard,jdbcType=INTEGER},
      </if>
      <if test="record.logicDelete != null" >
        logic_delete = #{record.logicDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dict_edu_grad_rewards_reason
    set id = #{record.id,jdbcType=INTEGER},
      grad_rewards_type_id = #{record.gradRewardsTypeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=INTEGER},
      standard = #{record.standard,jdbcType=INTEGER},
      logic_delete = #{record.logicDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReason" >
    update dict_edu_grad_rewards_reason
    <set >
      <if test="gradRewardsTypeId != null" >
        grad_rewards_type_id = #{gradRewardsTypeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=INTEGER},
      </if>
      <if test="standard != null" >
        standard = #{standard,jdbcType=INTEGER},
      </if>
      <if test="logicDelete != null" >
        logic_delete = #{logicDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shframework.modules.dict.entity.DictEduGradRewardsReason" >
    update dict_edu_grad_rewards_reason
    set grad_rewards_type_id = #{gradRewardsTypeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      locked = #{locked,jdbcType=INTEGER},
      standard = #{standard,jdbcType=INTEGER},
      logic_delete = #{logicDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>