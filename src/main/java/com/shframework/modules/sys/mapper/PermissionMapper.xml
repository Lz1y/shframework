<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shframework.modules.sys.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="permission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="last_modify_user_id" property="lastModifyUserId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="locked" property="locked" jdbcType="INTEGER" />
    <result column="logic_delete" property="logicDelete" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="allPermission" resultMap="BaseResultMap">
    <![CDATA[ select sp.id, sp.code, sp.title from sys_permission sp where sp.id <> 1 order by priority desc]]>
  </select>
  
  <select id="queryPermissionList" resultMap="BaseResultMap" parameterType="map">
  	select 
    <include refid="Base_Column_List" />
    from sys_permission _sp
	
	where _sp.logic_delete = 0
	
    <if test="searchCondition == null and defaultSortField != null" >
      order by ${defaultSortField}
    </if>
	limit #{limitStart}, #{limitEnd}
  </select>
  
  <select id="queryPermissionListCount" resultType="java.lang.Integer" parameterType="map">
  	select 
	count(_sp.id)
    from sys_permission _sp
	where _sp.logic_delete = 0
    <if test="searchCondition == null and defaultSortField != null" >
      order by ${defaultSortField}
    </if>
  </select>
  
  <delete id="delRT" parameterType="map">
  		delete from sys_role_resource_permission 
  			where 
  				role_id = #{roleid} 
  				<if test="resIdList!=null">
  				and resource_id in <foreach collection="resIdList" item="listItem" open="(" close=")" separator="," >#{listItem}</foreach>
  				</if>
  				
  </delete>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, code, priority, description, last_modify_user_id, create_date, modify_date, 
    status, locked, logic_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shframework.modules.sys.entity.PermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shframework.modules.sys.entity.PermissionExample" >
    delete from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shframework.modules.sys.entity.Permission" >
    insert into sys_permission (id, title, code, 
      priority, description, last_modify_user_id, 
      create_date, modify_date, status, 
      locked, logic_delete)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{lastModifyUserId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{locked,jdbcType=INTEGER}, #{logicDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shframework.modules.sys.entity.Permission" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id,
      </if>
        create_date,
        modify_date,
      <if test="status != null" >
        status,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="logicDelete != null" >
        logic_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyUserId != null" >
        #{lastModifyUserId,jdbcType=INTEGER},
      </if>
      	now(),
      	now(),
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=INTEGER},
      </if>
      <if test="logicDelete != null" >
        #{logicDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shframework.modules.sys.entity.PermissionExample" resultType="java.lang.Integer" >
    select count(*) from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_permission
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyUserId != null" >
        last_modify_user_id = #{record.lastModifyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=INTEGER},
      </if>
      <if test="record.logicDelete != null" >
        logic_delete = #{record.logicDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_permission
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      last_modify_user_id = #{record.lastModifyUserId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=INTEGER},
      logic_delete = #{record.logicDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shframework.modules.sys.entity.Permission" >
    update sys_permission
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id = #{lastModifyUserId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
        modify_date = now(),
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=INTEGER},
      </if>
      <if test="logicDelete != null" >
        logic_delete = #{logicDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shframework.modules.sys.entity.Permission" >
    update sys_permission
    set title = #{title,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      last_modify_user_id = #{lastModifyUserId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      locked = #{locked,jdbcType=INTEGER},
      logic_delete = #{logicDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>