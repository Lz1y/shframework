<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shframework.modules.sys.mapper.ComnTaskMapper" >
  <resultMap id="BaseResultMap" type="com.shframework.modules.sys.entity.ComnTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="pending_role_id" property="pendingRoleId" jdbcType="INTEGER" />
    <result column="process_status" property="processStatus" jdbcType="INTEGER" />
    <result column="advise" property="advise" jdbcType="VARCHAR" />
    <result column="last_modify_user_id" property="lastModifyUserId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, pending_role_id, process_status, advise, last_modify_user_id, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shframework.modules.sys.entity.ComnTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comn_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comn_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comn_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shframework.modules.sys.entity.ComnTaskExample" >
    delete from comn_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shframework.modules.sys.entity.ComnTask" >
    insert into comn_task (id, parent_id, pending_role_id, 
      process_status, advise, last_modify_user_id, 
      create_date)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{pendingRoleId,jdbcType=INTEGER}, 
      #{processStatus,jdbcType=INTEGER}, #{advise,jdbcType=VARCHAR}, #{lastModifyUserId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.shframework.modules.sys.entity.ComnTask" useGeneratedKeys="true" keyProperty="id">
    insert into comn_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="pendingRoleId != null" >
        pending_role_id,
      </if>
      <if test="processStatus != null" >
        process_status,
      </if>
      <if test="advise != null" >
        advise,
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id,
      </if>
<!--       <if test="createDate != null" > -->
        create_date,
<!--       </if> -->
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="pendingRoleId != null" >
        #{pendingRoleId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="advise != null" >
        #{advise,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyUserId != null" >
        #{lastModifyUserId,jdbcType=INTEGER},
      </if>
<!--       <if test="createDate != null" > -->
<!--         #{createDate,jdbcType=TIMESTAMP}, -->
<!--       </if> -->
			now()
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shframework.modules.sys.entity.ComnTaskExample" resultType="java.lang.Integer" >
    select count(*) from comn_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comn_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.pendingRoleId != null" >
        pending_role_id = #{record.pendingRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.processStatus != null" >
        process_status = #{record.processStatus,jdbcType=INTEGER},
      </if>
      <if test="record.advise != null" >
        advise = #{record.advise,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyUserId != null" >
        last_modify_user_id = #{record.lastModifyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comn_task
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      pending_role_id = #{record.pendingRoleId,jdbcType=INTEGER},
      process_status = #{record.processStatus,jdbcType=INTEGER},
      advise = #{record.advise,jdbcType=VARCHAR},
      last_modify_user_id = #{record.lastModifyUserId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shframework.modules.sys.entity.ComnTask" >
    update comn_task
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="pendingRoleId != null" >
        pending_role_id = #{pendingRoleId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="advise != null" >
        advise = #{advise,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyUserId != null" >
        last_modify_user_id = #{lastModifyUserId,jdbcType=INTEGER},
      </if>
<!--       <if test="createDate != null" > -->
        create_date = now()
<!--       </if> -->
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shframework.modules.sys.entity.ComnTask" >
    update comn_task
    set parent_id = #{parentId,jdbcType=INTEGER},
      pending_role_id = #{pendingRoleId,jdbcType=INTEGER},
      process_status = #{processStatus,jdbcType=INTEGER},
      advise = #{advise,jdbcType=VARCHAR},
      last_modify_user_id = #{lastModifyUserId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertBatch" parameterType="list">
	INSERT INTO comn_task (
		parent_id,
		pending_role_id,
		process_status,
		advise,
		last_modify_user_id,
		create_date
	)
	VALUES
	<foreach index="index" item="item" collection="list"  separator=",">
	(
		#{item.parentId,jdbcType=INTEGER},
	    #{item.pendingRoleId,jdbcType=INTEGER}, 
		#{item.processStatus,jdbcType=INTEGER},
		#{item.advise,jdbcType=VARCHAR},
	    #{item.lastModifyUserId,jdbcType=INTEGER}, 
		now()
	 ) 
	</foreach>  	
  </insert>
</mapper>